<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>ch.qos.logback</groupId>
    <artifactId>logback-parent</artifactId>
    <version>1.3.0-beta0-SNAPSHOT</version>
  </parent>

  <artifactId>logback-classic</artifactId>
  <packaging>jar</packaging>
  <name>Logback Classic Module</name>
  <description>logback-classic module</description>

  <properties>
    <module-name>ch.qos.logback.classic</module-name>
  </properties>

  <dependencies>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>
<!--     <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-ext</artifactId>
      <version>${slf4j.version}</version>
      <scope>test</scope>
    </dependency> -->

<!--     <dependency>
      <groupId>ch.qos.cal10n.plugins</groupId>
      <artifactId>maven-cal10n-plugin</artifactId>
      <version>${cal10n.version}</version>
      <scope>test</scope>
    </dependency> -->

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <type>test-jar</type>
      <version>${slf4j.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>log4j-over-slf4j</artifactId>
      <version>${slf4j.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jul-to-slf4j</artifactId>
      <version>${slf4j.version}</version>
      <scope>test</scope>
    </dependency>
    <!-- Must be after log4j-over-slf4j:
         * we want to use the classes from log4j-over-slf4j (so it must come first);
         * we want to use log4j.dtd from log4j. -->
    <dependency>
      <groupId>ch.qos.reload4j</groupId>
      <artifactId>reload4j</artifactId>
      <version>1.2.18.4</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.dom4j</groupId>
      <artifactId>dom4j</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>jakarta.mail</groupId>
      <artifactId>jakarta.mail-api</artifactId>
      <scope>compile</scope>
      <optional>true</optional>
    </dependency>

    <dependency>
      <groupId>com.sun.mail</groupId>
      <artifactId>jakarta.mail</artifactId>      
      <scope>runtime</scope>
      <optional>true</optional>
    </dependency>
    
    <dependency>
      <groupId>org.codehaus.janino</groupId>
      <artifactId>janino</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-core</artifactId>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>jakarta.servlet</groupId>
      <artifactId>jakarta.servlet-api</artifactId>
      <scope>provided</scope>
    </dependency>        
    <dependency>
      <groupId>com.icegreen</groupId>
      <artifactId>greenmail</artifactId>
      <version>2.0.0-alpha-1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.felix</groupId>
      <artifactId>org.apache.felix.main</artifactId>
      <version>5.6.10</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <build>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
      </resource>
    </resources>

    <plugins>
     
       <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <archive>
            <manifestEntries>
                <X-Compile-Source-JDK>${maven.compiler.source}</X-Compile-Source-JDK>	
                <X-Compile-Target-JDK>${maven.compiler.target}</X-Compile-Target-JDK>
                <Multi-Release>true</Multi-Release>
            </manifestEntries>
            <manifestFile>
              ${project.build.outputDirectory}/META-INF/MANIFEST.MF
            </manifestFile>
          </archive>
        </configuration>
        <executions>
          <execution>
            <id>bundle-test-jar</id>
            <phase>package</phase>
            <goals>
              <goal>test-jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>1.8</version>
        <dependencies>
          <dependency>
            <groupId>org.apache.ant</groupId>
            <artifactId>ant-junit</artifactId>
            <version>1.9.0</version>
          </dependency>
          <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
          </dependency>
          <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-core</artifactId>
            <version>${hamcrest.version}</version>
          </dependency>
          
        </dependencies>

        <executions>
          <!-- Disabled osgi tests given current OSGi/ServiceLoader integration failure -->
          <!-- 
          <execution>
          
            <id>ant-osgi-test</id>
            <phase>package</phase>
            <configuration>
              <target>
                <property name="currentVersion" value="${project.version}"/>
                <property name="slf4j.version" value="${slf4j.version}"/>
                <property name="basedir" value="${basedir}"/>
                <ant antfile="${basedir}/osgi-build.xml"/>
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
           -->
		  <execution>
            <id>ant-integration-test</id>
            <phase>package</phase>
            <configuration>
              <target>
                <property name="slf4j.version" value="${slf4j.version}"/>
                <ant antfile="${basedir}/integration.xml"/>
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <executions>
          <execution>
            <id>default-test</id>
            <configuration>
              <parallel>classes</parallel>
              <threadCount>8</threadCount>
              <!--<useUnlimitedThreads>false</useUnlimitedThreads>-->
              <forkCount>1C</forkCount>
              <reuseForks>true</reuseForks>
              <reportFormat>plain</reportFormat>
              <trimStackTrace>false</trimStackTrace>
              <!-- See https://issues.apache.org/jira/browse/SUREFIRE-1265 -->
              <childDelegation>true</childDelegation>
              <excludes>
                <exclude>**/test_osgi/BundleTest.java</exclude>
                <exclude>org.slf4j.implTest.MultithreadedInitializationTest.java</exclude>
                <exclude>org.slf4j.implTest.InitializationOutputTest.java</exclude>
                <exclude>ch.qos.logback.classic.util.ContextInitializerTest.java</exclude>
                <exclude>ch.qos.logback.classic.spi.InvocationTest.java</exclude>
              </excludes>
            </configuration>
          </execution>

          <execution>
            <id>singleJVM</id>
            <goals>
              <goal>test</goal>
            </goals>
            <configuration>
              <forkCount>4</forkCount>
              <reuseForks>false</reuseForks>
              <includes>
                <include>org.slf4j.implTest.MultithreadedInitializationTest.java</include>
                <include>org.slf4j.implTest.InitializationOutputTest.java</include>
                <include>ch.qos.logback.classic.util.ContextInitializerTest.java</include>
                <include>ch.qos.logback.classic.spi.InvocationTest.java</include>
              </includes>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
        <extensions>true</extensions>
        <executions>
          <execution>
            <id>bundle-manifest</id>
            <phase>process-classes</phase>
            <goals>
              <goal>manifest</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <instructions>
            <_noee>true</_noee> <!-- Jigsaw -->
            <_failok>true</_failok> <!-- Jigsaw -->
            <Export-Package>ch.qos.logback.classic*, org.slf4j.impl;version=${slf4j.version}</Export-Package>
            <!-- LB-CLASSIC It is necessary to specify the rolling
                 file packages as classes are created via IOC (xml
                 config files). They won't be found by Bnd's analysis
                 of java code. -->
            <Import-Package>
              sun.reflect;resolution:=optional,
              javax.*;resolution:=optional,
              org.xml.*;resolution:=optional,
              org.slf4j,
              org.slf4j.spi,
              org.slf4j.event,
              ch.qos.logback.core.rolling,
              ch.qos.logback.core.rolling.helper,
              ch.qos.logback.core.util,
              ch.qos.logback.core.read,
              *
            </Import-Package>
            <Bundle-RequiredExecutionEnvironment>JavaSE-1.6</Bundle-RequiredExecutionEnvironment>
            <!-- Needed to integrate ServiceLoader mechanism with OSGi -->
            <Require-Capability>osgi.extender; filter:="(osgi.extender=osgi.serviceloader.registrar)"</Require-Capability> 
            <Provide-Capability>osgi.serviceloader;osgi.serviceloader=org.slf4j.spi.SLF4JServiceProvider</Provide-Capability>
    
    
          </instructions>
        </configuration>
      </plugin>
    </plugins>
    <pluginManagement>
      <plugins>
      </plugins>
    </pluginManagement>
  </build>

  <profiles>

    <profile>
      <!-- Integration tests require the host-orion profile -->
      <id>host-orion</id>
      <dependencies>
        <!-- locally installed artifact -->
        <dependency>
          <groupId>com.microsoft.sqlserver</groupId>
          <artifactId>sqljdbc4</artifactId>
          <version>2.0</version>
          <scope>test</scope>
        </dependency>
        <!-- locally installed artifact -->
        <dependency>
          <groupId>com.oracle</groupId>
          <artifactId>ojdbc14</artifactId>
          <version>10.2.0.1</version>
          <scope>test</scope>
        </dependency>
      </dependencies>
    </profile>

    <profile>
      <!-- Integration tests require the host-hora profile -->
      <id>host-hora</id>
      <dependencies>
        <!-- locally installed artifact -->
        <dependency>
          <groupId>com.oracle</groupId>
          <artifactId>ojdbc14</artifactId>
          <version>10.2.0.1</version>
          <scope>test</scope>
        </dependency>
      </dependencies>
    </profile>
  </profiles>

</project>
