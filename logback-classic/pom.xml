<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>ch.qos.logback</groupId>
		<artifactId>logback-parent</artifactId>
		<version>1.1.8-SNAPSHOT</version>
	</parent>

	<artifactId>logback-classic</artifactId>
	<packaging>jar</packaging>
	<name>Logback Classic Module</name>
	<description>logback-classic module</description>

	<dependencies>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.lmax</groupId>
			<artifactId>disruptor</artifactId>
			<version>3.3.2</version>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-ext</artifactId>
			<version>${slf4j.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<type>test-jar</type>
			<version>${slf4j.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>log4j-over-slf4j</artifactId>
			<version>${slf4j.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jul-to-slf4j</artifactId>
			<version>${slf4j.version}</version>
			<scope>test</scope>
		</dependency>
		<!-- Must be after log4j-over-slf4j: * we want to use the classes from 
			log4j-over-slf4j (so it must come first); * we want to use log4j.dtd from 
			log4j. -->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>dom4j</groupId>
			<artifactId>dom4j</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>javax.mail</groupId>
			<artifactId>mail</artifactId>
			<scope>compile</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.codehaus.janino</groupId>
			<artifactId>janino</artifactId>
			<scope>compile</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.codehaus.groovy</groupId>
			<artifactId>groovy-all</artifactId>
			<scope>compile</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
			<type>test-jar</type>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>integration</artifactId>
			<version>${slf4j.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.geronimo.specs</groupId>
			<artifactId>geronimo-jms_1.1_spec</artifactId>
			<scope>compile</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<scope>compile</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>com.icegreen</groupId>
			<artifactId>greenmail</artifactId>
			<version>1.3</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.subethamail</groupId>
			<artifactId>subethasmtp</artifactId>
			<version>2.1.0</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.felix</groupId>
			<artifactId>org.apache.felix.main</artifactId>
			<version>2.0.2</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<resources>
			<resource>
				<directory>src/main/groovy</directory>
				<includes>
					<include>**/EvaluatorTemplate.groovy</include>
					<include>**/*.groovy</include>
				</includes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
			</resource>
		</resources>

		<plugins>

			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<compilerId>groovy-eclipse-compiler</compilerId>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.codehaus.groovy</groupId>
						<artifactId>groovy-eclipse-compiler</artifactId>
						<version>2.9.1-01</version>
					</dependency>
					<!-- for 2.8.0-01 and later you must have an explicit dependency on 
						groovy-eclipse-batch -->
					<dependency>
						<groupId>org.codehaus.groovy</groupId>
						<artifactId>groovy-eclipse-batch</artifactId>
						<version>2.3.7-01</version>
					</dependency>
				</dependencies>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.8</version>
				<configuration>
					<additionalProjectnatures>
						<projectnature>org.eclipse.jdt.groovy.core.groovyNature</projectnature>
					</additionalProjectnatures>
					<!-- Source includes is necessary to allow groovy files in the java 
						folder, else eclipse will throw a filtering exception -->
					<sourceIncludes>
						<sourceInclude>**/*.groovy</sourceInclude>
					</sourceIncludes>
					<!-- Download sources will make maven download and attach source files 
						where available -->
					<downloadSources>true</downloadSources>
					<downloadJavadocs>true</downloadJavadocs>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<manifestFile>
							${project.build.outputDirectory}/META-INF/MANIFEST.MF
						</manifestFile>
					</archive>
				</configuration>
				<executions>
					<execution>
						<id>bundle-test-jar</id>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
							<goal>test-jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- <plugin> -->
			<!-- <groupId>org.apache.maven.plugins</groupId> -->
			<!-- <artifactId>maven-antrun-plugin</artifactId> -->
			<!-- <version>1.7</version> -->
			<!-- <dependencies> -->
			<!-- <dependency> -->
			<!-- <groupId>org.apache.ant</groupId> -->
			<!-- <artifactId>ant-junit</artifactId> -->
			<!-- <version>1.8.1</version> -->
			<!-- </dependency> -->
			<!-- <dependency> -->
			<!-- <groupId>junit</groupId> -->
			<!-- <artifactId>junit</artifactId> -->
			<!-- <version>${junit.version}</version> -->
			<!-- </dependency> -->
			<!-- </dependencies> -->

			<!-- <executions> -->
			<!-- <execution> -->
			<!-- <id>ant-osgi-test</id> -->
			<!-- <phase>package</phase> -->
			<!-- <configuration> -->
			<!-- <target> -->
			<!-- <property name="currentVersion" value="${project.version}"/> -->
			<!-- <property name="slf4j.version" value="${slf4j.version}"/> -->
			<!-- <property name="basedir" value="${basedir}"/> -->
			<!-- <ant antfile="${basedir}/osgi-build.xml"/> -->
			<!-- </target> -->
			<!-- </configuration> -->
			<!-- <goals> -->
			<!-- <goal>run</goal> -->
			<!-- </goals> -->
			<!-- </execution> -->

			<!-- <execution> -->
			<!-- <id>ant-integration-test</id> -->
			<!-- <phase>package</phase> -->
			<!-- <configuration> -->
			<!-- <target> -->
			<!-- <property name="slf4j.version" value="${slf4j.version}"/> -->
			<!-- <ant antfile="${basedir}/integration.xml"/> -->
			<!-- </target> -->
			<!-- </configuration> -->
			<!-- <goals> -->
			<!-- <goal>run</goal> -->
			<!-- </goals> -->
			<!-- </execution> -->
			<!-- </executions> -->
			<!-- </plugin> -->

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<!-- once, never, pertest, always -->
					<!--<forkMode>once</forkMode> -->
					<forkCount>1C</forkCount>
					<reuseForks>false</reuseForks>
					<reportFormat>plain</reportFormat>
					<trimStackTrace>false</trimStackTrace>
					<excludes>
						<exclude>**/AllClassicTest.java</exclude>
						<exclude>**/PackageTest.java</exclude>
						<exclude>**/TestConstants.java</exclude>
						<exclude>**/test_osgi/BundleTest.java</exclude>
						<exclude>**/ch/qos/logback/classic/util/InitializationIntegrationTest.java</exclude>
						<!-- skip performance tests -->
						<exclude>**/*PerfTest.java</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<version>2.5.3</version>
				<extensions>true</extensions>
				<executions>
					<execution>
						<id>bundle-manifest</id>
						<phase>process-classes</phase>
						<goals>
							<goal>manifest</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<instructions>
						<Export-Package>ch.qos.logback.classic*,
							org.slf4j.impl;version=${slf4j.version}</Export-Package>
						<!-- LB-CLASSIC It is necessary to specify the rolling file packages 
							as classes are created via IOC (xml config files). They won't be found by 
							Bnd's analysis of java code. -->
						<Import-Package>
							sun.reflect;resolution:=optional,
							javax.*;resolution:=optional,
							org.xml.*;resolution:=optional,
							org.slf4j,
							org.slf4j.event,
							ch.qos.logback.core.rolling,
							ch.qos.logback.core.rolling.helper,
							ch.qos.logback.core.util,
							ch.qos.logback.core.read,
							org.codehaus.groovy.*;resolution:=optional,
							groovy.lang.*;resolution:=optional,
							*
						</Import-Package>
						<Bundle-RequiredExecutionEnvironment>JavaSE-1.6</Bundle-RequiredExecutionEnvironment>
					</instructions>
				</configuration>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
			</plugins>
		</pluginManagement>
	</build>

	<profiles>

		<profile>
			<!-- Integration tests require the host-orion profile -->
			<id>host-orion</id>
			<dependencies>
				<!-- locally installed artifact -->
				<dependency>
					<groupId>com.microsoft.sqlserver</groupId>
					<artifactId>sqljdbc4</artifactId>
					<version>2.0</version>
					<scope>test</scope>
				</dependency>
				<!-- locally installed artifact -->
				<dependency>
					<groupId>com.oracle</groupId>
					<artifactId>ojdbc14</artifactId>
					<version>10.2.0.1</version>
					<scope>test</scope>
				</dependency>
			</dependencies>
		</profile>

		<profile>
			<!-- Integration tests require the host-hora profile -->
			<id>host-hora</id>
			<dependencies>
				<!-- locally installed artifact -->
				<dependency>
					<groupId>com.oracle</groupId>
					<artifactId>ojdbc14</artifactId>
					<version>10.2.0.1</version>
					<scope>test</scope>
				</dependency>
			</dependencies>
		</profile>
	</profiles>

</project>
